/*    */ package by.gdev.updater;
/*    */ public class UpdaterDTO { private String client; private String offer; private String country;
/*    */   private double currentVersion;
/*    */   
/*  5 */   public void setClient(String client) { this.client = client; } private double newVersion; private String args; private String requestTime; private Boolean UpdaterLater; public void setOffer(String offer) { this.offer = offer; } public void setCountry(String country) { this.country = country; } public void setCurrentVersion(double currentVersion) { this.currentVersion = currentVersion; } public void setNewVersion(double newVersion) { this.newVersion = newVersion; } public void setArgs(String args) { this.args = args; } public void setRequestTime(String requestTime) { this.requestTime = requestTime; } public void setUpdaterLater(Boolean UpdaterLater) { this.UpdaterLater = UpdaterLater; } public boolean equals(Object o) { if (o == this) return true;  if (!(o instanceof UpdaterDTO)) return false;  UpdaterDTO other = (UpdaterDTO)o; if (!other.canEqual(this)) return false;  Object this$client = getClient(), other$client = other.getClient(); if ((this$client == null) ? (other$client != null) : !this$client.equals(other$client)) return false;  Object this$offer = getOffer(), other$offer = other.getOffer(); if ((this$offer == null) ? (other$offer != null) : !this$offer.equals(other$offer)) return false;  Object this$country = getCountry(), other$country = other.getCountry(); if ((this$country == null) ? (other$country != null) : !this$country.equals(other$country)) return false;  if (Double.compare(getCurrentVersion(), other.getCurrentVersion()) != 0) return false;  if (Double.compare(getNewVersion(), other.getNewVersion()) != 0) return false;  Object this$args = getArgs(), other$args = other.getArgs(); if ((this$args == null) ? (other$args != null) : !this$args.equals(other$args)) return false;  Object this$requestTime = getRequestTime(), other$requestTime = other.getRequestTime(); if ((this$requestTime == null) ? (other$requestTime != null) : !this$requestTime.equals(other$requestTime)) return false;  Object this$UpdaterLater = getUpdaterLater(), other$UpdaterLater = other.getUpdaterLater(); return !((this$UpdaterLater == null) ? (other$UpdaterLater != null) : !this$UpdaterLater.equals(other$UpdaterLater)); } protected boolean canEqual(Object other) { return other instanceof UpdaterDTO; } public int hashCode() { int PRIME = 59; result = 1; Object $client = getClient(); result = result * 59 + (($client == null) ? 43 : $client.hashCode()); Object $offer = getOffer(); result = result * 59 + (($offer == null) ? 43 : $offer.hashCode()); Object $country = getCountry(); result = result * 59 + (($country == null) ? 43 : $country.hashCode()); long $currentVersion = Double.doubleToLongBits(getCurrentVersion()); result = result * 59 + (int)($currentVersion >>> 32L ^ $currentVersion); long $newVersion = Double.doubleToLongBits(getNewVersion()); result = result * 59 + (int)($newVersion >>> 32L ^ $newVersion); Object $args = getArgs(); result = result * 59 + (($args == null) ? 43 : $args.hashCode()); Object $requestTime = getRequestTime(); result = result * 59 + (($requestTime == null) ? 43 : $requestTime.hashCode()); Object $UpdaterLater = getUpdaterLater(); return result * 59 + (($UpdaterLater == null) ? 43 : $UpdaterLater.hashCode()); } public String toString() { return "UpdaterDTO(client=" + getClient() + ", offer=" + getOffer() + ", country=" + getCountry() + ", currentVersion=" + getCurrentVersion() + ", newVersion=" + getNewVersion() + ", args=" + getArgs() + ", requestTime=" + getRequestTime() + ", UpdaterLater=" + getUpdaterLater() + ")"; }
/*    */   
/*  7 */   public String getClient() { return this.client; }
/*  8 */   public String getOffer() { return this.offer; }
/*  9 */   public String getCountry() { return this.country; }
/* 10 */   public double getCurrentVersion() { return this.currentVersion; }
/* 11 */   public double getNewVersion() { return this.newVersion; }
/* 12 */   public String getArgs() { return this.args; }
/* 13 */   public String getRequestTime() { return this.requestTime; } public Boolean getUpdaterLater() {
/* 14 */     return this.UpdaterLater;
/*    */   } }


/* Location:              C:\Users\vovanchik\Downloads\TLauncher.jar!\by\gde\\updater\UpdaterDTO.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */